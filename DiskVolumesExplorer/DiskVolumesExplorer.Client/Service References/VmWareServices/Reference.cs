//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DiskVolumesExplorer.Client.VmWareServices {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="VmWareServices", ConfigurationName="VmWareServices.Hypervisor")]
    public interface Hypervisor {
        
        [System.ServiceModel.OperationContractAttribute(Action="VmWareServices/Hypervisor/IsVirtualMachineExist", ReplyAction="VmWareServices/Hypervisor/IsVirtualMachineExistResponse")]
        bool IsVirtualMachineExist(string virtualMachineName);
        
        [System.ServiceModel.OperationContractAttribute(Action="VmWareServices/Hypervisor/IsVirtualMachineExist", ReplyAction="VmWareServices/Hypervisor/IsVirtualMachineExistResponse")]
        System.Threading.Tasks.Task<bool> IsVirtualMachineExistAsync(string virtualMachineName);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface HypervisorChannel : DiskVolumesExplorer.Client.VmWareServices.Hypervisor, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class HypervisorClient : System.ServiceModel.ClientBase<DiskVolumesExplorer.Client.VmWareServices.Hypervisor>, DiskVolumesExplorer.Client.VmWareServices.Hypervisor {
        
        public HypervisorClient() {
        }
        
        public HypervisorClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public HypervisorClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public HypervisorClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public HypervisorClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public bool IsVirtualMachineExist(string virtualMachineName) {
            return base.Channel.IsVirtualMachineExist(virtualMachineName);
        }
        
        public System.Threading.Tasks.Task<bool> IsVirtualMachineExistAsync(string virtualMachineName) {
            return base.Channel.IsVirtualMachineExistAsync(virtualMachineName);
        }
    }
}
